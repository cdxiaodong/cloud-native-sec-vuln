{
	"cvss": {
		"score": 10,
		"vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:C/C:H/I:H/A:H"
	},
	"cwes": [
		{
			"cwe_id": "CWE-200",
			"name": "Exposure of Sensitive Information to an Unauthorized Actor"
		},
		{
			"cwe_id": "CWE-256",
			"name": "Plaintext Storage of a Password"
		}
	],
	"ghsa_id": "GHSA-g7j7-h4q8-8w2f",
	"summary": "Plaintext storage and exposure of credentials in Rancher API and cluster.management.cattle.io object",
	"description": "### Impact\r\nAn issue was discovered in Rancher versions up to and including 2.5.15 and 2.6.6 where sensitive fields, like passwords, API keys and Rancher's service account token (used to provision clusters), were stored in plaintext directly on Kubernetes objects like `Clusters`, for example `cluster.management.cattle.io`. Anyone with read access to those objects in the Kubernetes API could retrieve the plaintext version of those sensitive data.\r\n\r\nThe exposed credentials are visible in Rancher to authenticated `Cluster Owners`, `Cluster Members`, `Project Owners`, `Project Members` and `User Base` on the endpoints:\r\n- `/v1/management.cattle.io.catalogs`\r\n- `/v1/management.cattle.io.cluster`\r\n- `/v1/management.cattle.io.clustertemplates`\r\n- `/v1/management.cattle.io.notifiers`\r\n- `/v1/project.cattle.io.sourcecodeproviderconfig`\r\n- `/k8s/clusters/local/apis/management.cattle.io/v3/catalogs`\r\n- `/k8s/clusters/local/apis/management.cattle.io/v3/clusters`\r\n-  `/k8s/clusters/local/apis/management.cattle.io/v3/clustertemplates`\r\n- `/k8s/clusters/local/apis/management.cattle.io/v3/notifiers`\r\n- `/k8s/clusters/local/apis/project.cattle.io/v3/sourcecodeproviderconfigs`\r\n\r\nSensitive fields are now stripped from `Clusters` and other objects and moved to a `Secret` before the object is stored. The `Secret` is retrieved when the credential is needed. For objects that existed before this security fix, a one-time migration happens on startup.\r\n\r\n**Important:**\r\n- The exposure of Rancher's `serviceAccountToken` allows any standard user to escalate its privileges to cluster administrator in Rancher.\r\n- For the exposure of credentials not related to Rancher, the final impact severity for confidentiality, integrity and availability is dependent on the permissions that the leaked credentials have on their own services.\r\n\r\nThe fields that have been addressed by this security fix are:\r\n\r\n- `Notifier.SMTPConfig.Password`\r\n- `Notifier.WechatConfig.Secret`\r\n- `Notifier.DingtalkConfig.Secret`\r\n- `Catalog.Spec.Password`\r\n- `SourceCodeProviderConfig.GithubPipelineConfig.ClientSecret`\r\n- `SourceCodeProviderConfig.GitlabPipelineConfig.ClientSecret`\r\n- `SourceCodeProviderConfig.BitbucketCloudPipelineConfig.ClientSecret`\r\n- `SourceCodeProviderConfig.BitbucketServerPipelineConfig.PrivateKey`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.BackupConfig.S3BackupConfig.SecretKey`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.PrivateRegistries.Password`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret`\r\n- `Cluster.Spec.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword`\r\n- `Cluster.Status.ServiceAccountToken`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.PrivateRegistries.Password`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.Network.WeaveNetworkProvider.Password`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.Global.Password`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.VsphereCloudProvider.VirtualCenter.Password`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.OpenstackCloudProvider.Global.Password`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientSecret`\r\n- `ClusterTemplate.Spec.ClusterConfig.RancherKubernetesEngineConfig.CloudProvider.AzureCloudProvider.AADClientCertPassword`\r\n\r\n### Patches\r\nPatched versions include releases 2.5.16, 2.6.7 and later versions.\r\n\r\nAfter upgrading to a patched version, it is important to check for the `SecretsMigrated` condition on `Clusters`, `ClusterTemplates`, and `Catalogs` to confirm when secrets have been fully migrated off of those objects and the objects scoped within them (`Notifiers` and `SourceCodeProviderConfigs`).\r\n\r\n### Workarounds\r\nLimit access in Rancher to trusted users. There is not a direct mitigation besides upgrading to the patched Rancher versions.\r\n\r\n**Important:**\r\n- It is highly advised to rotate Rancher's `serviceAccountToken`. This rotation is not done by the version upgrade. Please see the helper script below.\r\n- The local and downstream clusters should be checked for potential unrecognized services (pods), users and API keys.\r\n- It is recommended to review for potential leaked credentials in this scenario, that are not directly related to Rancher, and to change them if deemed necessary.\r\n\r\nThe script available in [rancherlabs/support-tools/rotate-tokens](https://github.com/rancherlabs/support-tools/blob/master/rotate-tokens) repository can be used as a helper to rotate the service account token (used to provision clusters). The script requires a valid Rancher API token, `kubectl` access to the `local` cluster and the `jq` command.\r\n\r\n### Credits\r\nWe would like to recognize and appreciate Florian Struck (from [Continum AG](https://www.continum.net/)) and [Marco Stuurman](https://github.com/fe-ax) (from [Shock Media B.V.](https://www.shockmedia.nl)) for the responsible disclosure of this security issue.\r\n\r\n### For more information\r\nIf you have any questions or comments about this advisory:\r\n* Reach out to [SUSE Rancher Security team](https://github.com/rancher/rancher/security/policy) for security related inquiries.\r\n* Open an issue in [Rancher](https://github.com/rancher/rancher/issues/new/choose) repository.\r\n* Verify our [support matrix](https://www.suse.com/suse-rancher/support-matrix/all-supported-versions/) and [product support lifecycle](https://www.suse.com/lifecycle/).",
	"severity": "critical",
	"identifiers": [
		{
			"value": "GHSA-g7j7-h4q8-8w2f",
			"type": "GHSA"
		},
		{
			"value": "CVE-2021-36782",
			"type": "CVE"
		}
	],
	"published_at": "2022-08-19T03:50:03Z",
	"updated_at": "2022-09-20T13:33:52Z",
	"vulnerabilities": [
		{
			"package": {
				"ecosystem": "go",
				"name": "rancher/rancher"
			},
			"vulnerable_version_range": "From 2.5.0 and 2.6.0 up to and including 2.5.15 and 2.6.6",
			"patched_versions": "2.5.16, 2.6.7 and later releases"
		}
	],
	"cve_id": "CVE-2021-36782",
	"url": "https://api.github.com/repos/rancher/rancher/security-advisories/GHSA-g7j7-h4q8-8w2f",
	"html_url": "https://github.com/rancher/rancher/security/advisories/GHSA-g7j7-h4q8-8w2f",
	"publisher": {
		"login": "rmweir",
		"id": 19376037,
		"node_id": "MDQ6VXNlcjE5Mzc2MDM3",
		"avatar_url": "https://avatars.githubusercontent.com/u/19376037?v=4",
		"html_url": "https://github.com/rmweir",
		"gravatar_id": "",
		"type": "User",
		"site_admin": false,
		"url": "https://api.github.com/users/rmweir",
		"events_url": "https://api.github.com/users/rmweir/events{/privacy}",
		"following_url": "https://api.github.com/users/rmweir/following{/other_user}",
		"followers_url": "https://api.github.com/users/rmweir/followers",
		"gists_url": "https://api.github.com/users/rmweir/gists{/gist_id}",
		"organizations_url": "https://api.github.com/users/rmweir/orgs",
		"received_events_url": "https://api.github.com/users/rmweir/received_events",
		"repos_url": "https://api.github.com/users/rmweir/repos",
		"starred_url": "https://api.github.com/users/rmweir/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/rmweir/subscriptions"
	},
	"state": "published",
	"cwe_ids": [
		"CWE-200",
		"CWE-256"
	]
}