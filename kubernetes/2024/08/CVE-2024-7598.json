{
	"_kubernetes_io": {
		"updated_at": "0001-01-01T00:00:00Z",
		"google_group_url": "https://groups.google.com/g/kubernetes-announce/search?q=CVE-2024-7598",
		"issue_number": 126587
	},
	"content_text": "CVSS Rating: [CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N](https://www.first.org/cvss/calculator/3.1#CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:L/I:N/A:N) - **Low** (3.1)\n\nA security issue was discovered in Kubernetes where a malicious or compromised pod could bypass network restrictions enforced by network policies during namespace deletion. The order in which objects are deleted during namespace termination is not defined, and it is possible for network policies to be deleted before the pods that they protect.  This can lead to a brief period in which the pods are running and accepting network connections, but the network policies restrictions are not applied.\n\n### Am I vulnerable?\n\nAll clusters that rely on network policies may be vulnerable.  Run the following command to see if network policies are in use:\n\n```\nkubectl get networkpolicies.networking.k8s.io --all-namespaces\n```\n\n#### Affected Versions\n\nkube-apiserver \u003e= v1.3\n\n### How do I mitigate this vulnerability?\n\nThis issue can be mitigated by:\n\n- Manually deleting pods and workload resources that orchestrate pods before starting namespace deletion\n\n- Adding finalizers to network policies to prevent them from being deleted until the pods that they protect have been deleted first. The following proof-of-concept controller automates this process:\n\nhttps://github.com/kubernetes-sigs/network-policy-finalizer \n\n#### Fixed Versions\n\n- None. A longer term comprehensive fix is proposed in the following KEP: https://github.com/kubernetes/enhancements/pull/5095 \n\n### Detection\n\nUsers of network policies may be able to detect abuse via network logs.  The exact details of this process are environment specific.\n\nIf you find evidence that this vulnerability has been exploited, please contact security@kubernetes.io\n\n#### Acknowledgements\n\nThis vulnerability was reported by John McGuinness @s1xtw03 and Aaron Coffey @aaroncoffey.\n\nThe issue was coordinated by: \n\nAntonio Ojea @aojea\nTim Hockin @thockin\nDan Winship @danwinship\nShane Utt @shaneutt\nDavid Eads @deads2k\nClayton Colemon @smarterclayton\nMo Khan @enj\nCraig Ingram @cji\n\n/label official-cve-feed\n/triage accepted\n/lifecycle frozen\n/area security\n/kind bug\n/committee security-response",
	"date_published": "2024-08-07T21:30:11Z",
	"external_url": "https://www.cve.org/cverecord?id=CVE-2024-7598",
	"id": "CVE-2024-7598",
	"status": "fixed",
	"summary": "Network restriction bypass via race condition during namespace termination",
	"url": "https://github.com/kubernetes/kubernetes/issues/126587"
}