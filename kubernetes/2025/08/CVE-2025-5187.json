{
	"_kubernetes_io": {
		"updated_at": "0001-01-01T00:00:00Z",
		"google_group_url": "https://groups.google.com/g/kubernetes-announce/search?q=CVE-2025-5187",
		"issue_number": 133471
	},
	"content_text": "CVSS Rating: [CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L](https://www.first.org/cvss/calculator/3-1#CVSS:3.1/AV:N/AC:L/PR:H/UI:N/S:U/C:H/I:H/A:L) - Medium (6.7)\n\nA vulnerability exists in the NodeRestriction admission controller where node users can delete their corresponding node object by patching themselves with an OwnerReference to a cluster-scoped resource. If the OwnerReference resource does not exist or is subsequently deleted, the given node object will be deleted via garbage collection. By default, node users are authorized for create and patch requests but not delete requests against their node object. Since the NodeRestriction admission controller does not prevent patching OwnerReferences, a compromised node could leverage this vulnerability to delete and then recreate its node object. This would permit the node object to be recreated with modified taints or labels which are normally rejected by this plugin. Modifying taints or labels on a node could allow an attacker to control which pods are running on the compromised node.\n\n### Am I vulnerable?\n\nAll clusters that have enabled the NodeRestriction but not the OwnerReferencesPermissionEnforcement admission controller are vulnerable. The OwnerReferencesPermissionEnforcement controller protects access to the OwnerReferences of an object so that only users with delete permission to the object can change it.\n\n#### Affected Versions\nkube-apiserver: \u003c= v1.31.11\nkube-apiserver: \u003c= v1.32.7\nkube-apiserver: \u003c= v1.33.3\n### How do I mitigate this vulnerability?\n\nThis issue can be mitigated by upgrading to a kube-apiserver binary running one of patched minor versions for 1.31 through 1.33 listed below. These fixed versions have added functionality to the NodeRestriction admission controller to prevent node users from modifying their own OwnerReferences. \n\nAlternatively, this vulnerability can be mitigated by enabling the OwnerReferencesPermissionEnforcement admission controller, which will prevent any user without delete permissions on an object from modifying the OwnerReferences on that object. Note that this admission controller will apply to all users and object types.\n\n#### Fixed Versions\nkube-apiserver: \u003e= v1.31.12\nkube-apiserver: \u003e= v1.32.8\nkube-apiserver: \u003e= v1.33.4\n\n### Detection\n\nThis issue can be detected on clusters which have NodeRestriction but not OwnerReferencesPermissionEnforcement enabled by analyzing API audit logs for node patch requests issued by node users which modify OwnerReferences. In normal operation, a Kubelet will never issue a patch request which modifies its own OwnerReferences.\n\nIf you find evidence that this vulnerability has been exploited, please contact [security@kubernetes.io](mailto:security@kubernetes.io)\n\n#### Acknowledgements\n\nThis vulnerability was reported by Paul Viossat.\n\nThe issue was fixed and coordinated by: \n\nSergey Kanzhelev @SergeyKanzhelev\nJordan Liggitt @liggitt\nMarko MudriniÄ‡ @xmudrii",
	"date_published": "2025-08-11T16:29:36Z",
	"external_url": "https://www.cve.org/cverecord?id=CVE-2025-5187",
	"id": "CVE-2025-5187",
	"status": "fixed",
	"summary": "Nodes can delete themselves by adding an OwnerReference",
	"url": "https://github.com/kubernetes/kubernetes/issues/133471"
}