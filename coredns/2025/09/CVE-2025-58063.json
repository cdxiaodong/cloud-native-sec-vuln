{
	"cvss": {
		"score": 7.1,
		"vector_string": "CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:N/I:L/A:H"
	},
	"cwes": [
		{
			"cwe_id": "CWE-681",
			"name": "Incorrect Conversion between Numeric Types"
		}
	],
	"ghsa_id": "GHSA-93mf-426m-g6x9",
	"summary": "DNS Cache Pinning via etcd Lease ID Confusion",
	"description": "# Summary\r\n\r\nThe CoreDNS etcd plugin contains a TTL confusion vulnerability where lease IDs are incorrectly used as TTL values, enabling cache pinning for very long periods. This can effectively cause a denial of service for DNS updates/changes to affected services.\r\n\r\n# Details\r\n\r\nIn `plugin/etcd/etcd.go`, the `TTL()` function casts the 64-bit etcd lease ID to a uint32 and uses it as the TTL:\r\n\r\n```go\r\nfunc (e *Etcd) TTL(kv *mvccpb.KeyValue, serv *msg.Service) uint32 {\r\n    etcdTTL := uint32(kv.Lease)  // BUG: Lease ID != TTL duration\r\n    // ... rest of function uses etcdTTL as actual TTL\r\n}\r\n```\r\n\r\nLease IDs are identifiers, not durations. Large lease IDs can produce very large TTLs after truncation, causing downstream resolvers and clients to cache answers for years.\r\n\r\nThis enables cache pinning attacks, such as:\r\n\r\n1. Attacker has etcd write access (compromised service account, misconfigured RBAC/TLS, exposed etcd, insider).\r\n2. Attacker writes/updates a key and attaches any lease (the actual lease duration is irrelevant; the ID is misused).\r\n4. CoreDNS serves the record with an extreme TTL; downstream resolvers/clients cache it for a very long time.\r\n5. Even after fixing/deleting the key (or restarting CoreDNS), clients continue to use the cached answer until their caches expire or enforce their own TTL caps.\r\n\r\nSome resolvers implement TTL caps, but values and defaults vary widely and are not guaranteed.\r\n\r\n# PoC\r\n\r\n1. Launch etcd:\r\n\r\n```bash\r\netcd \\\r\n  --data-dir ./etcd-data \\\r\n  --listen-client-urls http://127.0.0.1:2379 \\\r\n  --advertise-client-urls http://127.0.0.1:2379 \\\r\n  --listen-peer-urls http://127.0.0.1:2380 \\\r\n  --initial-advertise-peer-urls http://127.0.0.1:2380 \\\r\n  --initial-cluster default=http://127.0.0.1:2380 \\\r\n  --name default \\\r\n  --initial-cluster-token etcd-ttl-poc \\\r\n  --initial-cluster-state new \u0026\r\n```\r\n\r\n2. Prepare CoreDNS configuration:\r\n\r\n```bash\r\ncat \u003e Corefile \u003c\u003c 'EOF'\r\nskydns.local {\r\n    etcd {\r\n        path /skydns\r\n        endpoint http://localhost:2379\r\n        debug\r\n    }\r\n    log\r\n    errors\r\n}\r\nEOF\r\n```\r\n\r\n3. Launch CoreDNS:\r\n\r\n```bash\r\ncoredns -conf Corefile -dns.port=1053\r\n```\r\n\r\n4. Create an etcd record called `large-lease-service` with a lease grant of 1 hour:\r\n\r\n```bash\r\nLEASE_ID=$(etcdctl --endpoints=http://127.0.0.1:2379 lease grant 3600 | awk '{print $2}')\r\n\r\netcdctl --endpoints=http://127.0.0.1:2379 put /skydns/local/skydns/large-lease-service '{\r\n  \"host\": \"192.168.1.101\",\r\n  \"port\": 8080\r\n}' --lease=$LEASE_ID\r\n```\r\n\r\n7. Verify the lease details:\r\n\r\n```bash\r\n$ etcdctl lease timetolive $LEASE_ID\r\nlease 7c4a98dd35b75c23 granted with TTL(3600s), remaining(3252s)\r\n```\r\n\r\n8. Query the DNS record and observe the record TTL at 28 years:\r\n\r\n```bash\r\n$ dig +noall +answer @127.0.0.1 -p 1053 large-lease-service.skydns.local A\r\nlarge-lease-service.skydns.local. 901209123 IN A 192.168.1.101\r\n```\r\n\r\n# Impact\r\n\r\nAffects any CoreDNS deployment using the etcd plugin for service discovery.\r\n\r\n- Availability: High as service changes (IP rotations, failovers, rollbacks) may be ignored for extended periods by caches.\r\n- Integrity: Low as stale/incorrect answers persist abnormally long. (Note: attacker with etcd write could already point to malicious endpoints; the bug magnifies persistence.)\r\n- Confidentiality: None.\r\n\r\nThe bug was introduced in #1702 as part of the CoreDNS [v1.2.0 release](https://github.com/coredns/coredns/releases/tag/v1.2.0).\r\n\r\n# Mitigation\r\n\r\nThe TTL function should utilise etcd's Lease API to determine the proper TTL for leased records. Add configurable limits for minimum and maximum TTL when passing lease records, to clamp potentially extreme TTL values set as lease grant.\r\n\r\n# Credit\r\n\r\nThanks to [@thevilledev](https://github.com/thevilledev) for disclovering this vulnerability and contributing a fix.\r\n\r\n# For more information\r\n\r\nPlease consult our [security guide](https://github.com/coredns/coredns/blob/master/.github/SECURITY.md) for more information regarding our security process.",
	"severity": "high",
	"identifiers": [
		{
			"value": "GHSA-93mf-426m-g6x9",
			"type": "GHSA"
		},
		{
			"value": "CVE-2025-58063",
			"type": "CVE"
		}
	],
	"published_at": "2025-09-09T15:24:38Z",
	"updated_at": "2025-09-09T15:24:38Z",
	"vulnerabilities": [
		{
			"package": {
				"ecosystem": "go",
				"name": "github.com/coredns/coredns"
			},
			"vulnerable_version_range": "\u003e=1.2.0",
			"patched_versions": "1.12.4"
		}
	],
	"cve_id": "CVE-2025-58063",
	"url": "https://api.github.com/repos/coredns/coredns/security-advisories/GHSA-93mf-426m-g6x9",
	"html_url": "https://github.com/coredns/coredns/security/advisories/GHSA-93mf-426m-g6x9",
	"publisher": {
		"login": "yongtang",
		"id": 6932348,
		"node_id": "MDQ6VXNlcjY5MzIzNDg=",
		"avatar_url": "https://avatars.githubusercontent.com/u/6932348?v=4",
		"html_url": "https://github.com/yongtang",
		"gravatar_id": "",
		"type": "User",
		"site_admin": false,
		"url": "https://api.github.com/users/yongtang",
		"events_url": "https://api.github.com/users/yongtang/events{/privacy}",
		"following_url": "https://api.github.com/users/yongtang/following{/other_user}",
		"followers_url": "https://api.github.com/users/yongtang/followers",
		"gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}",
		"organizations_url": "https://api.github.com/users/yongtang/orgs",
		"received_events_url": "https://api.github.com/users/yongtang/received_events",
		"repos_url": "https://api.github.com/users/yongtang/repos",
		"starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/yongtang/subscriptions"
	},
	"state": "published",
	"cwe_ids": [
		"CWE-681"
	],
	"credits": [
		{
			"login": "thevilledev",
			"type": "reporter"
		}
	],
	"credits_detailed": [
		{
			"user": {
				"login": "thevilledev",
				"id": 3088277,
				"node_id": "MDQ6VXNlcjMwODgyNzc=",
				"avatar_url": "https://avatars.githubusercontent.com/u/3088277?v=4",
				"html_url": "https://github.com/thevilledev",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/thevilledev",
				"events_url": "https://api.github.com/users/thevilledev/events{/privacy}",
				"following_url": "https://api.github.com/users/thevilledev/following{/other_user}",
				"followers_url": "https://api.github.com/users/thevilledev/followers",
				"gists_url": "https://api.github.com/users/thevilledev/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/thevilledev/orgs",
				"received_events_url": "https://api.github.com/users/thevilledev/received_events",
				"repos_url": "https://api.github.com/users/thevilledev/repos",
				"starred_url": "https://api.github.com/users/thevilledev/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/thevilledev/subscriptions"
			},
			"type": "reporter",
			"state": "accepted"
		}
	]
}