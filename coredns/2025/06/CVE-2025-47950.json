{
	"cvss": {
		"score": 7.5,
		"vector_string": "CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H"
	},
	"ghsa_id": "GHSA-cvx7-x8pj-x2gw",
	"summary": "DoQ Memory Exhaustion via Stream Amplification",
	"description": "### Summary\r\n\r\nA **Denial of Service (DoS)** vulnerability was discovered in the CoreDNS DNS-over-QUIC (DoQ) server implementation. The server previously created a new goroutine for every incoming QUIC stream without imposing any limits on the number of concurrent streams or goroutines. A remote, unauthenticated attacker could open a large number of streams, leading to uncontrolled memory consumption and eventually causing an Out Of Memory (OOM) crash â€” especially in containerized or memory-constrained environments.\r\n\r\n### Impact\r\n\r\n- **Component**: `server_quic.go`\r\n- **Attack Vector**: Remote, network-based\r\n- **Attack Complexity**: Low\r\n- **Privileges Required**: None\r\n- **User Interaction**: None\r\n- **Impact**: High availability loss (OOM kill or unresponsiveness)\r\n\r\nThis issue affects deployments with `quic://` enabled in the Corefile. A single attacker can cause the CoreDNS instance to become unresponsive using minimal bandwidth and CPU.\r\n\r\n### Patches\r\n\r\nThe patch introduces two key mitigation mechanisms:\r\n\r\n- **`max_streams`**: Caps the number of concurrent QUIC streams per connection. Default: `256`.\r\n- **`worker_pool_size`**: Introduces a server-wide, bounded worker pool to process incoming streams. Default: `1024`.\r\n\r\nThis eliminates the 1:1 stream-to-goroutine model and ensures that CoreDNS remains resilient under high concurrency. The new configuration options are exposed through the `quic` Corefile block:\r\n\r\n```\r\nquic {\r\n    max_streams 256\r\n    worker_pool_size 1024\r\n}\r\n```\r\n\r\nThese defaults are generous and aligned with typical DNS-over-QUIC client behavior.\r\n\r\n### Workarounds\r\n\r\nIf you're unable to upgrade immediately, you can:\r\n- Disable QUIC support by removing or commenting out the `quic://` block in your Corefile\r\n- Use container runtime resource limits to detect and isolate excessive memory usage\r\n- Monitor QUIC connection patterns and alert on anomalies\r\n\r\n### References\r\n\r\n- [RFC 9250 - DNS over Dedicated QUIC Connections](https://datatracker.ietf.org/doc/html/rfc9250)\r\n- [quic-go GitHub project](https://github.com/quic-go/quic-go)\r\n- [QUIC stream exhaustion class of vulnerabilities (related)](https://www.usenix.org/conference/usenixsecurity23/presentation/botella)\r\n\r\n### Credit\r\n\r\nThanks to [@thevilledev](https://github.com/thevilledev) for disclovering this vulnerability and contributing a high-quality fix.\r\n\r\n### For more information\r\n\r\nPlease consult our [security guide](https://github.com/coredns/coredns/blob/master/.github/SECURITY.md) for more information regarding our security process.\r\n",
	"severity": "high",
	"identifiers": [
		{
			"value": "GHSA-cvx7-x8pj-x2gw",
			"type": "GHSA"
		},
		{
			"value": "CVE-2025-47950",
			"type": "CVE"
		}
	],
	"published_at": "2025-06-06T11:45:43Z",
	"updated_at": "2025-06-06T11:45:43Z",
	"vulnerabilities": [
		{
			"package": {
				"ecosystem": "go",
				"name": "coredns"
			},
			"vulnerable_version_range": "\u003c1.12.2",
			"patched_versions": "1.12.2+"
		}
	],
	"cve_id": "CVE-2025-47950",
	"url": "https://api.github.com/repos/coredns/coredns/security-advisories/GHSA-cvx7-x8pj-x2gw",
	"html_url": "https://github.com/coredns/coredns/security/advisories/GHSA-cvx7-x8pj-x2gw",
	"publisher": {
		"login": "yongtang",
		"id": 6932348,
		"node_id": "MDQ6VXNlcjY5MzIzNDg=",
		"avatar_url": "https://avatars.githubusercontent.com/u/6932348?v=4",
		"html_url": "https://github.com/yongtang",
		"gravatar_id": "",
		"type": "User",
		"site_admin": false,
		"url": "https://api.github.com/users/yongtang",
		"events_url": "https://api.github.com/users/yongtang/events{/privacy}",
		"following_url": "https://api.github.com/users/yongtang/following{/other_user}",
		"followers_url": "https://api.github.com/users/yongtang/followers",
		"gists_url": "https://api.github.com/users/yongtang/gists{/gist_id}",
		"organizations_url": "https://api.github.com/users/yongtang/orgs",
		"received_events_url": "https://api.github.com/users/yongtang/received_events",
		"repos_url": "https://api.github.com/users/yongtang/repos",
		"starred_url": "https://api.github.com/users/yongtang/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/yongtang/subscriptions"
	},
	"state": "published",
	"credits": [
		{
			"login": "thevilledev",
			"type": "reporter"
		}
	],
	"credits_detailed": [
		{
			"user": {
				"login": "thevilledev",
				"id": 3088277,
				"node_id": "MDQ6VXNlcjMwODgyNzc=",
				"avatar_url": "https://avatars.githubusercontent.com/u/3088277?v=4",
				"html_url": "https://github.com/thevilledev",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/thevilledev",
				"events_url": "https://api.github.com/users/thevilledev/events{/privacy}",
				"following_url": "https://api.github.com/users/thevilledev/following{/other_user}",
				"followers_url": "https://api.github.com/users/thevilledev/followers",
				"gists_url": "https://api.github.com/users/thevilledev/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/thevilledev/orgs",
				"received_events_url": "https://api.github.com/users/thevilledev/received_events",
				"repos_url": "https://api.github.com/users/thevilledev/repos",
				"starred_url": "https://api.github.com/users/thevilledev/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/thevilledev/subscriptions"
			},
			"type": "reporter",
			"state": "accepted"
		}
	]
}