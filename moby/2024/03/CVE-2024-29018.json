{
	"cvss": {
		"score": 5.9,
		"vector_string": "CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:N/A:N"
	},
	"cwes": [
		{
			"cwe_id": "CWE-669",
			"name": "Incorrect Resource Transfer Between Spheres"
		}
	],
	"ghsa_id": "GHSA-mq39-4gv4-mvpx",
	"summary": "External DNS requests from 'internal' networks could lead to data exfiltration",
	"description": "Moby is an open source container framework originally developed by Docker Inc. as Docker. It is a key component of Docker Engine, Docker Desktop, and other distributions of container tooling or runtimes. As a batteries-included container runtime, Moby comes with a built-in networking implementation that enables communication between containers, and between containers and external resources.\r\n\r\nMoby's networking implementation allows for creating and using many networks, each with their own subnet and gateway. This feature is frequently referred to as custom networks, as each network can have a different driver, set of parameters, and thus behaviors. When creating a network, the `--internal` flag is used to designate a network as _internal_. The `internal` attribute in a docker-compose.yml file may also be used to mark a network _internal_, and other API clients may specify the `internal` parameter as well.\r\n\r\nWhen containers with networking are created, they are assigned unique network interfaces and IP addresses (typically from a non-routable [RFC 1918](https://datatracker.ietf.org/doc/html/rfc1918) subnet). The root network namespace (hereafter referred to as the 'host') serves as a router for non-internal networks, with a gateway IP that provides SNAT/DNAT to/from container IPs.\r\n\r\nContainers on an _internal_ network may communicate between each other, but are precluded from communicating with any networks the host has access to (LAN or WAN) as no default route is configured, and firewall rules are set up to drop all outgoing traffic. Communication with the gateway IP address (and thus appropriately configured host services) is possible, and the host may communicate with any container IP directly.\r\n\r\nIn addition to configuring the Linux kernel's various networking features to enable container networking, `dockerd` directly provides some services to container networks. Principal among these is serving as a resolver, enabling service discovery (looking up other containers on the network by name), and resolution of names from an upstream resolver.\r\n\r\nWhen a DNS request for a name that does not correspond to a container is received, the request is forwarded to the configured upstream resolver (by default, the host's configured resolver). This request is made from the container network namespace: the level of access and routing of traffic is the same as if the request was made by the container itself.\r\n\r\nAs a consequence of this design, containers solely attached to _internal_ network(s) will be unable to resolve names using the upstream resolver, as the container itself is unable to communicate with that nameserver. Only the names of containers also attached to the internal network are able to be resolved.\r\n\r\nMany systems will run a local forwarding DNS resolver, typically present on a loopback address (`127.0.0.0/8`), such as systemd-resolved or dnsmasq. Common loopback address examples include `127.0.0.1` or `127.0.0.53`. As the host and any containers have separate loopback devices, a consequence of the design described above is that containers are unable to resolve names from the host's configured resolver, as they cannot reach these addresses on the host loopback device.\r\n\r\nTo bridge this gap, and to allow containers to properly resolve names even when a local forwarding resolver is used on a loopback address, `dockerd` will detect this scenario and instead forward DNS requests from the host/root network namespace. The loopback resolver will then forward the requests to its configured upstream resolvers, as expected.\r\n\r\n## Impact\r\n\r\nBecause `dockerd` will forward DNS requests to the host loopback device, bypassing the container network namespace's normal routing semantics entirely, _internal_ networks can unexpectedly forward DNS requests to an external nameserver.\r\n\r\nBy registering a domain for which they control the authoritative nameservers, an attacker could arrange for a compromised container to exfiltrate data by encoding it in DNS queries that will eventually be answered by their nameservers. For example, if the domain `evil.example` was registered, the authoritative nameserver(s) for that domain could (eventually and indirectly) receive a request for `this-is-a-secret.evil.example`.\r\n\r\nDocker Desktop is not affected, as Docker Desktop always runs an internal resolver on a RFC 1918 address.\r\n\r\n## Patches\r\n\r\nMoby releases 26.0.0-rc3, 25.0.5 (released) and 23.0.11 (to be released) are patched to prevent forwarding DNS requests from internal networks.\r\n\r\n## Workarounds\r\n\r\n-   Run containers intended to be solely attached to _internal_ networks with a custom upstream address (`--dns` argument to `docker run`, or API equivalent), which will force all upstream DNS queries to be resolved from the container network namespace.\r\n\r\n## Background\r\n\r\n- yair zak originally reported this issue to the Docker security team.\r\n-  PR \u003chttps://github.com/moby/moby/pull/46609\u003e was opened in public to fix this issue, as it was not originally considered to have a security implication.\r\n- [The official documentation](https://docs.docker.com/network/drivers/ipvlan/#:~:text=If%20the%20parent,the%20network%20completely) claims that \"the `--internal` flag that will completely isolate containers on a network from any communications external to that network,\" which necessitated this advisory and CVE.",
	"severity": "medium",
	"identifiers": [
		{
			"value": "GHSA-mq39-4gv4-mvpx",
			"type": "GHSA"
		},
		{
			"value": "CVE-2024-29018",
			"type": "CVE"
		}
	],
	"published_at": "2024-03-19T23:24:57Z",
	"updated_at": "2024-03-19T23:31:22Z",
	"vulnerabilities": [
		{
			"package": {
				"ecosystem": "go",
				"name": "github.com/docker/docker"
			},
			"vulnerable_version_range": "\u003c 26.0.0-rc3",
			"patched_versions": "\u003e= 26.0.0-rc3"
		},
		{
			"package": {
				"ecosystem": "go",
				"name": "github.com/docker/docker"
			},
			"vulnerable_version_range": "\u003c 25.0.5",
			"patched_versions": "\u003e= 25.0.5"
		},
		{
			"package": {
				"ecosystem": "go",
				"name": "github.com/docker/docker"
			},
			"vulnerable_version_range": "\u003c 23.0.11",
			"patched_versions": "\u003e= 23.0.11"
		}
	],
	"cve_id": "CVE-2024-29018",
	"url": "https://api.github.com/repos/moby/moby/security-advisories/GHSA-mq39-4gv4-mvpx",
	"html_url": "https://github.com/moby/moby/security/advisories/GHSA-mq39-4gv4-mvpx",
	"publisher": {
		"login": "thaJeztah",
		"id": 1804568,
		"node_id": "MDQ6VXNlcjE4MDQ1Njg=",
		"avatar_url": "https://avatars.githubusercontent.com/u/1804568?v=4",
		"html_url": "https://github.com/thaJeztah",
		"gravatar_id": "",
		"type": "User",
		"site_admin": false,
		"url": "https://api.github.com/users/thaJeztah",
		"events_url": "https://api.github.com/users/thaJeztah/events{/privacy}",
		"following_url": "https://api.github.com/users/thaJeztah/following{/other_user}",
		"followers_url": "https://api.github.com/users/thaJeztah/followers",
		"gists_url": "https://api.github.com/users/thaJeztah/gists{/gist_id}",
		"organizations_url": "https://api.github.com/users/thaJeztah/orgs",
		"received_events_url": "https://api.github.com/users/thaJeztah/received_events",
		"repos_url": "https://api.github.com/users/thaJeztah/repos",
		"starred_url": "https://api.github.com/users/thaJeztah/starred{/owner}{/repo}",
		"subscriptions_url": "https://api.github.com/users/thaJeztah/subscriptions"
	},
	"state": "published",
	"cwe_ids": [
		"CWE-669"
	],
	"credits": [
		{
			"login": "robmry",
			"type": "analyst"
		},
		{
			"login": "akerouanton",
			"type": "remediation_developer"
		},
		{
			"login": "neersighted",
			"type": "analyst"
		},
		{
			"login": "gabriellavengeo",
			"type": "analyst"
		},
		{
			"login": "cibofo",
			"type": "finder"
		}
	],
	"credits_detailed": [
		{
			"user": {
				"login": "robmry",
				"id": 148866618,
				"node_id": "U_kgDOCN-GOg",
				"avatar_url": "https://avatars.githubusercontent.com/u/148866618?v=4",
				"html_url": "https://github.com/robmry",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/robmry",
				"events_url": "https://api.github.com/users/robmry/events{/privacy}",
				"following_url": "https://api.github.com/users/robmry/following{/other_user}",
				"followers_url": "https://api.github.com/users/robmry/followers",
				"gists_url": "https://api.github.com/users/robmry/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/robmry/orgs",
				"received_events_url": "https://api.github.com/users/robmry/received_events",
				"repos_url": "https://api.github.com/users/robmry/repos",
				"starred_url": "https://api.github.com/users/robmry/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/robmry/subscriptions"
			},
			"type": "analyst",
			"state": "accepted"
		},
		{
			"user": {
				"login": "akerouanton",
				"id": 557933,
				"node_id": "MDQ6VXNlcjU1NzkzMw==",
				"avatar_url": "https://avatars.githubusercontent.com/u/557933?v=4",
				"html_url": "https://github.com/akerouanton",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/akerouanton",
				"events_url": "https://api.github.com/users/akerouanton/events{/privacy}",
				"following_url": "https://api.github.com/users/akerouanton/following{/other_user}",
				"followers_url": "https://api.github.com/users/akerouanton/followers",
				"gists_url": "https://api.github.com/users/akerouanton/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/akerouanton/orgs",
				"received_events_url": "https://api.github.com/users/akerouanton/received_events",
				"repos_url": "https://api.github.com/users/akerouanton/repos",
				"starred_url": "https://api.github.com/users/akerouanton/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/akerouanton/subscriptions"
			},
			"type": "remediation_developer",
			"state": "accepted"
		},
		{
			"user": {
				"login": "neersighted",
				"id": 1049222,
				"node_id": "MDQ6VXNlcjEwNDkyMjI=",
				"avatar_url": "https://avatars.githubusercontent.com/u/1049222?v=4",
				"html_url": "https://github.com/neersighted",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/neersighted",
				"events_url": "https://api.github.com/users/neersighted/events{/privacy}",
				"following_url": "https://api.github.com/users/neersighted/following{/other_user}",
				"followers_url": "https://api.github.com/users/neersighted/followers",
				"gists_url": "https://api.github.com/users/neersighted/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/neersighted/orgs",
				"received_events_url": "https://api.github.com/users/neersighted/received_events",
				"repos_url": "https://api.github.com/users/neersighted/repos",
				"starred_url": "https://api.github.com/users/neersighted/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/neersighted/subscriptions"
			},
			"type": "analyst",
			"state": "accepted"
		},
		{
			"user": {
				"login": "gabriellavengeo",
				"id": 23005021,
				"node_id": "MDQ6VXNlcjIzMDA1MDIx",
				"avatar_url": "https://avatars.githubusercontent.com/u/23005021?v=4",
				"html_url": "https://github.com/gabriellavengeo",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/gabriellavengeo",
				"events_url": "https://api.github.com/users/gabriellavengeo/events{/privacy}",
				"following_url": "https://api.github.com/users/gabriellavengeo/following{/other_user}",
				"followers_url": "https://api.github.com/users/gabriellavengeo/followers",
				"gists_url": "https://api.github.com/users/gabriellavengeo/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/gabriellavengeo/orgs",
				"received_events_url": "https://api.github.com/users/gabriellavengeo/received_events",
				"repos_url": "https://api.github.com/users/gabriellavengeo/repos",
				"starred_url": "https://api.github.com/users/gabriellavengeo/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/gabriellavengeo/subscriptions"
			},
			"type": "analyst",
			"state": "accepted"
		},
		{
			"user": {
				"login": "cibofo",
				"id": 53799417,
				"node_id": "MDQ6VXNlcjUzNzk5NDE3",
				"avatar_url": "https://avatars.githubusercontent.com/u/53799417?v=4",
				"html_url": "https://github.com/cibofo",
				"gravatar_id": "",
				"type": "User",
				"site_admin": false,
				"url": "https://api.github.com/users/cibofo",
				"events_url": "https://api.github.com/users/cibofo/events{/privacy}",
				"following_url": "https://api.github.com/users/cibofo/following{/other_user}",
				"followers_url": "https://api.github.com/users/cibofo/followers",
				"gists_url": "https://api.github.com/users/cibofo/gists{/gist_id}",
				"organizations_url": "https://api.github.com/users/cibofo/orgs",
				"received_events_url": "https://api.github.com/users/cibofo/received_events",
				"repos_url": "https://api.github.com/users/cibofo/repos",
				"starred_url": "https://api.github.com/users/cibofo/starred{/owner}{/repo}",
				"subscriptions_url": "https://api.github.com/users/cibofo/subscriptions"
			},
			"type": "finder",
			"state": "accepted"
		}
	]
}